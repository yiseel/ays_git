{"ast":null,"code":"var _jsxFileName = \"/Users/ahn-yiseel/Desktop/\\u1109\\u1162 \\u1111\\u1169\\u11AF\\u1103\\u1165/\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8/study/src/pages/Edit.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DiaryStateContext } from \"../App\";\nimport DiaryEdit from \"../components/DiaryEdit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Edit = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const diaryList = useContext(DiaryStateContext);\n  const [originData, setOriginData] = useState();\n  useEffect(() => {\n    const titleElement = document.getElementsByTagName('title')[0];\n    titleElement.innerHTML = `감정 일기장 - ${id}번째 일기 수정`;\n  }, []);\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(it => parseInt(it.id) === parseInt(id));\n\n      if (targetDiary) {\n        setOriginData(targetDiary);\n      } else {\n        alert(\"없는 일기입니다\");\n        navigate(\"/\", {\n          replace: true\n        });\n      }\n    }\n\n    ;\n  }, [id, diaryList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: originData && /*#__PURE__*/_jsxDEV(DiaryEdit, {\n      isEdit: true,\n      originData: originData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 28\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Edit, \"qRkO4C9obQPMbFiv2SfMBFE5+m0=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Edit;\nexport default Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/Users/ahn-yiseel/Desktop/새 폴더/작업/study/src/pages/Edit.js"],"names":["useContext","useEffect","useState","useNavigate","useParams","DiaryStateContext","DiaryEdit","Edit","navigate","id","diaryList","originData","setOriginData","titleElement","document","getElementsByTagName","innerHTML","length","targetDiary","find","it","parseInt","alert","replace"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM;AAACM,IAAAA;AAAD,MAAOL,SAAS,EAAtB;AACA,QAAMM,SAAS,GAAGV,UAAU,CAACK,iBAAD,CAA5B;AAEA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,EAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMY,YAAY,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,EAAuC,CAAvC,CAArB;AACAF,IAAAA,YAAY,CAACG,SAAb,GAA0B,YAAWP,EAAG,UAAxC;AACH,GAHQ,EAGP,EAHO,CAAT;AAKAR,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGS,SAAS,CAACO,MAAV,IAAoB,CAAvB,EAAyB;AACrB,YAAMC,WAAW,GAAGR,SAAS,CAACS,IAAV,CAAgBC,EAAD,IAAOC,QAAQ,CAACD,EAAE,CAACX,EAAJ,CAAR,KAAoBY,QAAQ,CAACZ,EAAD,CAAlD,CAApB;;AAEA,UAAGS,WAAH,EAAe;AACXN,QAAAA,aAAa,CAACM,WAAD,CAAb;AACH,OAFD,MAEK;AACDI,QAAAA,KAAK,CAAC,UAAD,CAAL;AACAd,QAAAA,QAAQ,CAAC,GAAD,EAAM;AAACe,UAAAA,OAAO,EAAC;AAAT,SAAN,CAAR;AACH;AACJ;;AAAA;AACJ,GAXQ,EAWP,CAACd,EAAD,EAAKC,SAAL,CAXO,CAAT;AAaA,sBACI;AAAA,cACKC,UAAU,iBAAI,QAAC,SAAD;AAAW,MAAA,MAAM,EAAE,IAAnB;AAAyB,MAAA,UAAU,EAAEA;AAArC;AAAA;AAAA;AAAA;AAAA;AADnB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA/BD;;GAAMJ,I;UACeJ,W,EAEJC,S;;;KAHXG,I;AAiCN,eAAeA,IAAf","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DiaryStateContext } from \"../App\";\nimport DiaryEdit from \"../components/DiaryEdit\";\n\nconst Edit = () => {\n    const navigate = useNavigate();\n\n    const {id} = useParams();\n    const diaryList = useContext(DiaryStateContext);\n\n    const [originData, setOriginData] = useState();\n\n    useEffect(()=>{\n        const titleElement = document.getElementsByTagName('title')[0];\n        titleElement.innerHTML = `감정 일기장 - ${id}번째 일기 수정`;\n    },[]);\n\n    useEffect(()=>{\n        if(diaryList.length >= 1){\n            const targetDiary = diaryList.find((it)=> parseInt(it.id) === parseInt(id));\n        \n            if(targetDiary){\n                setOriginData(targetDiary);\n            }else{\n                alert(\"없는 일기입니다\");\n                navigate(\"/\", {replace:true});\n            }\n        };\n    },[id, diaryList])\n\n    return (\n        <div>\n            {originData && <DiaryEdit isEdit={true} originData={originData} />}\n        </div>\n    )\n}\n\nexport default Edit;"]},"metadata":{},"sourceType":"module"}