{"ast":null,"code":"var _jsxFileName = \"/Users/ahn-yiseel/Desktop/\\u1109\\u1162 \\u1111\\u1169\\u11AF\\u1103\\u1165/\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8/study/src/components/DiaryEdit.js\",\n    _s = $RefreshSig$();\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport Myheader from \"./Myheader\";\nimport Mybutton from \"./Mybutton\";\nimport EmotionItem from \"./EmotionItem\";\nimport { DiaryDispatchContext } from \"../App\";\nimport { getStringDate } from \"../pages/util/Date\";\nimport { emotionList } from \"../pages/util/emotion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DiaryEdit = _ref => {\n  _s();\n\n  let {\n    isEdit,\n    originData\n  } = _ref;\n  const [emotion, setEmotion] = useState(3);\n  const [content, setContent] = useState(\"\");\n  const contentRef = useRef();\n  const [date, setDate] = useState(getStringDate(new Date()));\n  const navigate = useNavigate();\n  const handleClickEmote = useCallback(emotion => {\n    setEmotion(emotion);\n  }, []);\n  const {\n    onCreate,\n    onEdit,\n    onRemove\n  } = useContext(DiaryDispatchContext);\n\n  const handleRemove = () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      onRemove(originData.id);\n      navigate(\"/\", {\n        replace: true\n      });\n    }\n  };\n\n  const handleSumit = () => {\n    if (content.length < 1) {\n      contentRef.current.focus();\n      return;\n    }\n\n    if (window.confirm(isEdit ? \"일기를 수정하시겠습니까?\" : \"새로운 일기를 작성하시겠습니까?\")) {\n      if (!isEdit) {\n        onCreate(date, content, emotion);\n      } else {\n        onEdit(originData.id, date, content, emotion);\n      }\n    }\n\n    ;\n    navigate(\"/\", {\n      replace: true\n    });\n  };\n\n  useEffect(() => {\n    if (isEdit) {\n      setDate(getStringDate(new Date(parseInt(originData.date))));\n      setEmotion(originData.emotion);\n      setContent(originData.content);\n    }\n  }, [isEdit, originData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiartEdit\",\n    children: [/*#__PURE__*/_jsxDEV(Myheader, {\n      headText: isEdit ? \"일기 수정하기\" : \"새 일기 쓰기\",\n      leftChild: /*#__PURE__*/_jsxDEV(Mybutton, {\n        text: \"< 뒤로 가기\",\n        onClick: () => navigate(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 28\n      }, this),\n      rigthChild: isEdit && /*#__PURE__*/_jsxDEV(Mybutton, {\n        text: \"삭제하기\",\n        type: \"negative\",\n        onClick: handleRemove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uC624\\uB298\\uC740 \\uC5B8\\uC81C\\uC778\\uAC00\\uC694?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input_date\",\n          type: \"date\",\n          value: date,\n          onClick: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uC624\\uB180\\uC758 \\uAC10\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_box emotion_list_wrapper\",\n        children: emotionList.map(it => /*#__PURE__*/_jsxDEV(EmotionItem, { ...it,\n          onClick: handleClickEmote,\n          itselected: it.emotion_id === emotion\n        }, it.emotion_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uC624\\uB298\\uC758 \\uC77C\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_box text_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"\\uC624\\uB298\\uC740 \\uC5B4\\uB560\\uB098\\uC694?\",\n          ref: contentRef,\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control_box\",\n        children: [/*#__PURE__*/_jsxDEV(Mybutton, {\n          text: \"취소하기\",\n          onClick: () => navigate(-1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Mybutton, {\n          text: \"작성 완료\",\n          type: \"positive\",\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DiaryEdit, \"ja0BiJEu6BjsyMO4CRvTHqF9d+g=\", false, function () {\n  return [useNavigate];\n});\n\n_c = DiaryEdit;\nexport default DiaryEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiaryEdit\");","map":{"version":3,"sources":["/Users/ahn-yiseel/Desktop/새 폴더/작업/study/src/components/DiaryEdit.js"],"names":["useNavigate","useCallback","useContext","useEffect","useRef","useState","Myheader","Mybutton","EmotionItem","DiaryDispatchContext","getStringDate","emotionList","DiaryEdit","isEdit","originData","emotion","setEmotion","content","setContent","contentRef","date","setDate","Date","navigate","handleClickEmote","onCreate","onEdit","onRemove","handleRemove","window","confirm","id","replace","handleSumit","length","current","focus","parseInt","e","target","value","map","it","emotion_id","handleSubmit"],"mappings":"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","sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport { useCallback, useContext, useEffect, useRef, useState } from \"react\";\n\nimport Myheader from \"./Myheader\";\nimport Mybutton from \"./Mybutton\";\nimport EmotionItem from \"./EmotionItem\";\nimport { DiaryDispatchContext } from \"../App\";\nimport { getStringDate } from \"../pages/util/Date\";\nimport { emotionList } from \"../pages/util/emotion\";\n\n\nconst DiaryEdit = ({isEdit, originData}) => {\n\n    const [emotion, setEmotion] = useState(3);\n    const [content, setContent] = useState(\"\");\n    const contentRef = useRef();\n\n    const [date, setDate] = useState(getStringDate(new Date()));\n    \n    const navigate = useNavigate();\n\n    const handleClickEmote = useCallback((emotion) => {\n        setEmotion(emotion)\n    },[]);\n    \n    const {onCreate, onEdit, onRemove} = useContext(DiaryDispatchContext);\n    const handleRemove = () => {\n        if(window.confirm(\"정말 삭제하시겠습니까?\")){\n            onRemove(originData.id);\n            navigate(\"/\", {replace:true});\n        }\n    };\n\n    const handleSumit = () => {\n        if(content.length < 1){\n            contentRef.current.focus();\n            return;\n        }\n\n        if(window.confirm(isEdit ? \"일기를 수정하시겠습니까?\" : \"새로운 일기를 작성하시겠습니까?\")){\n            if(!isEdit){\n                onCreate(date, content, emotion);\n            }else{\n                onEdit(originData.id, date, content, emotion);\n            }\n        };\n        navigate(\"/\", {replace:true})\n    };\n\n    useEffect(()=>{\n        if(isEdit){\n            setDate(getStringDate(new Date(parseInt(originData.date))));\n            setEmotion(originData.emotion);\n            setContent(originData.content);\n        }\n    },[isEdit, originData])\n\n    return(\n        <div className=\"DiartEdit\">\n            <Myheader \n                headText={isEdit ? \"일기 수정하기\" : \"새 일기 쓰기\"}\n                leftChild={<Mybutton text={\"< 뒤로 가기\"} onClick={()=>navigate(-1)}/>}\n                rigthChild={isEdit && <Mybutton text={\"삭제하기\"} type={\"negative\"} onClick={handleRemove}/>}\n            />\n            <section>\n                <h4>오늘은 언제인가요?</h4>\n                <div className=\"input_box\">\n                    <input className=\"input_date\" type=\"date\" value={date} onClick={(e)=> setDate(e.target.value)}/>\n                </div>\n            </section>\n            <section>\n                <h4>오놀의 감정</h4>\n                <div className=\"input_box emotion_list_wrapper\">\n                    {emotionList.map((it)=>(\n                        <EmotionItem key={it.emotion_id} {... it}\n                            onClick={handleClickEmote}\n                            itselected={it.emotion_id === emotion}\n                        />\n                    ))}\n                </div>\n            </section>\n            <section>\n                <h4>오늘의 일기</h4>\n                <div className=\"input_box text_wrapper\">\n                    <textarea \n                    placeholder=\"오늘은 어땠나요?\"\n                    ref={contentRef} \n                    value={content} \n                    onChange={(e)=>setContent(e.target.value)}/>\n                </div>\n            </section>\n            <section>\n                <div className=\"control_box\">\n                    <Mybutton text={\"취소하기\"} onClick={()=> navigate(-1)}/>\n                    <Mybutton text={\"작성 완료\"} type={\"positive\"} onClick={handleSubmit}/>\n                </div>\n            </section>\n        </div>\n    )\n};\n\nexport default DiaryEdit;"]},"metadata":{},"sourceType":"module"}